{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accepted/accepted.component.css","webpack:///./src/app/accepted/accepted.component.html","webpack:///./src/app/accepted/accepted.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cart/cart.component.css","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/main-screen/main-screen.component.css","webpack:///./src/app/main-screen/main-screen.component.html","webpack:///./src/app/main-screen/main-screen.component.ts","webpack:///./src/app/payment/payment.component.css","webpack:///./src/app/payment/payment.component.html","webpack:///./src/app/payment/payment.component.ts","webpack:///./src/app/product-list/product-list.component.css","webpack:///./src/app/product-list/product-list.component.html","webpack:///./src/app/product-list/product-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/shared/model/order.ts","webpack:///./src/shared/model/product.ts","webpack:///./src/shared/services/data.service.ts","webpack:///./src/shared/services/product.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FjY2VwdGVkL2FjY2VwdGVkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1 class=\\\"display-4\\\">Your payment was accepted!</h1>\\r\\n    <p class=\\\"lead\\\">The order will be available to be collected at the store.</p>\\r\\n    <hr class=\\\"my-4\\\">\\r\\n    <a class=\\\"btn btn-primary btn-lg\\\" [routerLink] = \\\"'/'\\\" role=\\\"button\\\">Ok</a>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-accepted',\r\n  templateUrl: './accepted.component.html',\r\n  styleUrls: ['./accepted.component.css']\r\n})\r\nexport class AcceptedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { MainScreenComponent } from './main-screen/main-screen.component';\r\nimport { AcceptedComponent } from './accepted/accepted.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: MainScreenComponent },\r\n  { path: 'checkout', component: PaymentComponent },\r\n  { path: 'accepted', component: AcceptedComponent }  \r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <router-outlet></router-outlet>    \\r\\n</div>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PaymentComponent } from './payment/payment.component';\r\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { CartComponent } from './cart/cart.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MainScreenComponent } from './main-screen/main-screen.component';\nimport { AcceptedComponent } from './accepted/accepted.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PaymentComponent,\r\n    ProductListComponent,\r\n    CartComponent,\r\n    MainScreenComponent,\r\n    AcceptedComponent\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">My Cart  -  {{ myTap | currency }}</li>\\r\\n    </ol>\\r\\n  </nav>\\r\\n<ul class=\\\"list-group\\\" *ngFor=\\\"let product of myOrder.products\\\">\\r\\n  <li class=\\\"list-group-item\\\">{{ product.name }} - {{ product.price | currency }} \\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"onClickRemoveProduct(product);\\\">-</button>\\r\\n  </li>  \\r\\n</ul>\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\"  [disabled]=\\\"myTap == 0\\\"  [routerLink] = \\\"'/checkout'\\\">Proceed to checkout</button>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'src/shared/services/data.service';\r\nimport { Order } from 'src/shared/model/order';\r\nimport { Product } from 'src/shared/model/product';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.css']\r\n})\r\nexport class CartComponent implements OnInit {\r\n\r\n  myOrder: Order;\r\n  myTap: number;\r\n\r\n  constructor(private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    this.dataService.currentOrder.subscribe(data => this.myOrder = data);\r\n    this.dataService.currentTap.subscribe(data => this.myTap = data);\r\n  }\r\n\r\n  onClickRemoveProduct(removedProduct: Product){\r\n    this.dataService.changeOrderRmv(removedProduct);\r\n  }\r\n\r\n  onClickCheckout(){\r\n    \r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4tc2NyZWVuL21haW4tc2NyZWVuLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-product-list></app-product-list>\\r\\n  <br><br>\\r\\n<app-cart></app-cart>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-main-screen',\r\n  templateUrl: './main-screen.component.html',\r\n  styleUrls: ['./main-screen.component.css']\r\n})\r\nexport class MainScreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BheW1lbnQvcGF5bWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n        <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Checkout - {{ myTap | currency }}</li>\\r\\n    </ol>\\r\\n</nav>\\r\\n<h6 class=\\\"text-center\\\">Credit Card Information</h6>\\r\\n<form [formGroup]=\\\"paymentForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Number</label>\\r\\n                <input type=\\\"number\\\" formControlName=\\\"number\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.number.errors }\\\" />\\r\\n                <div *ngIf=\\\"submitted && f.number.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.number.errors.required\\\">Credit card number is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Name</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.name.errors }\\\" />\\r\\n                <div *ngIf=\\\"submitted && f.name.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.name.errors.required\\\">Name is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Expiration Date</label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"expirationDate\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.expirationDate.errors }\\\" />\\r\\n                <div *ngIf=\\\"submitted && f.expirationDate.errors\\\" class=\\\"invalid-feedback\\\">\\r\\n                    <div *ngIf=\\\"f.expirationDate.errors.required\\\">Expiration Date is required</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\" >Pay</button>\\r\\n    </div>\\r\\n</form>\"","import { Component, OnInit } from '@angular/core';\r\nimport {FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { DataService } from 'src/shared/services/data.service';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.component.html',\r\n  styleUrls: ['./payment.component.css']\r\n})\r\nexport class PaymentComponent implements OnInit {\r\n\r\n  paymentForm: FormGroup;\r\n  submitted = false;\r\n  myTap: number;\r\n  constructor(private formBuilder: FormBuilder, private dataService: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.paymentForm = this.formBuilder.group({\r\n      number: ['', Validators.required],\r\n      name: ['', Validators.required],\r\n      expirationDate: ['', Validators.required]\r\n    });\r\n    this.dataService.currentTap.subscribe(data => this.myTap = data);\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.paymentForm.controls; }\r\n\r\n  onSubmit() {\r\n      this.submitted = true;\r\n\r\n      // stop here if form is invalid\r\n      if (this.paymentForm.invalid) {\r\n          return;\r\n      }\r\n\r\n      this.router.navigate(['accepted']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QtbGlzdC9wcm9kdWN0LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<nav aria-label=\\\"breadcrumb\\\">\\r\\n    <ol class=\\\"breadcrumb\\\">\\r\\n      <li class=\\\"breadcrumb-item active\\\" aria-current=\\\"page\\\">Product List</li>\\r\\n    </ol>\\r\\n  </nav>\\r\\n<ul class=\\\"list-group\\\" *ngFor=\\\"let product of productList\\\">\\r\\n  <li class=\\\"list-group-item\\\">{{ product.name }} - {{ product.price | currency }} \\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"onClickAddProduct(product);\\\">+</button>\\r\\n  </li>  \\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from 'src/shared/model/product';\r\nimport { DataService } from 'src/shared/services/data.service';\r\nimport { ProductService } from 'src/shared/services/product.service';\r\n\r\n@Component({\r\n  selector: 'app-product-list',\r\n  templateUrl: './product-list.component.html',\r\n  styleUrls: ['./product-list.component.css']\r\n})\r\nexport class ProductListComponent implements OnInit {\r\n\r\n  productList: Product[];\r\n  message: string;\r\n  constructor(private dataService: DataService, private productService: ProductService) { }\r\n\r\n  ngOnInit() {\r\n    this.productList = [\r\n      {\r\n        \"id\": \"001\",\r\n        \"name\": \"Apple Ipod\",\r\n        \"price\": 99\r\n      },\r\n      {\r\n        \"id\": \"002\",\r\n        \"name\": \" IBM ThinkPad 700C\",\r\n        \"price\": 599\r\n      }\r\n    ];\r\n\r\n    // this.productService.getProductList().subscribe(\r\n    //   data => { this.productList = data},\r\n    //   error => { this.message = error}\r\n    // );\r\n    \r\n  }\r\n\r\n  onClickAddProduct(receivedProduct: Product){\r\n    this.dataService.changeOrderAdd(receivedProduct);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","import { Product } from './product';\r\n\r\nexport class Order{\r\n    \r\n    id: string;\r\n    products: Product[] = [];\r\n\r\n}","export class Product{\r\n    id: string;\r\n    name: string;\r\n    price: number;\r\n}","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Product } from '../model/product';\r\nimport { Order } from '../model/order';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  //Shared Order\r\n  private orderSource: BehaviorSubject<Order> = new BehaviorSubject(new Order);\r\n  currentOrder: Observable<Order> = this.orderSource.asObservable();\r\n\r\n  //Shared Check\r\n  private myTapSource = new BehaviorSubject(0);\r\n  currentTap = this.myTapSource.asObservable();\r\n\r\n  constructor() { }\r\n\r\n  //Adds product price\r\n  changeCurrentTapAdd(valor: number){\r\n    let acumulate = this.myTapSource.getValue();\r\n    acumulate += valor;\r\n\r\n    this.myTapSource.next(acumulate);\r\n  }\r\n\r\n  //Removes product  price\r\n  changeCurrentTapRmv(valor: number){\r\n    let acumulate = this.myTapSource.getValue();\r\n    acumulate -= valor;\r\n\r\n    this.myTapSource.next(acumulate);\r\n  }\r\n\r\n  changeOrderAdd(productReceived: Product){\r\n    let prd = new Product;\r\n    prd.id = productReceived.id;\r\n    prd.name = productReceived.name;\r\n    prd.price = productReceived.price;\r\n  \r\n\r\n   this.orderSource.value.products.push(prd);\r\n\r\n   //Refresh current tap\r\n   this.changeCurrentTapAdd(productReceived.price)\r\n }\r\n\r\n changeOrderRmv(productRemoved: Product){    \r\n   for(let i = 0; i < this.orderSource.value.products.length; i++){\r\n     if(this.orderSource.value.products[i].id == productRemoved.id && this.orderSource.value.products[i].name == productRemoved.name){\r\n       this.orderSource.value.products.splice(i, 1);\r\n     }\r\n   }\r\n   \r\n   this.changeCurrentTapRmv(productRemoved.price);\r\n }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Product } from '../model/product';\r\n\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { throwError, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  productUrl = 'http://localhost:8080/products';\r\n\r\n  constructor( private http: HttpClient ) { }\r\n\r\n  getProductList(): Observable<any>{\r\n    return this.http.get<any>(`${this.productUrl}`) \r\n        .pipe(\r\n          retry(2),\r\n          catchError(this.handleError)\r\n        );             \r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse){\r\n    if( error.error instanceof ErrorEvent){\r\n      console.error('Client Side Error: ', error.error.message);\r\n    } else {\r\n      console.error('Server Side Error: ', error);\r\n    }\r\n\r\n    return throwError('Was not possible to get product list.');\r\n  }\r\n}\r\n"],"sourceRoot":""}